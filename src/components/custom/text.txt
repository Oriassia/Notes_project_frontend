<Card className="w-full max-w-lg">
        <CardHeader>
          <CardTitle>Add New Note</CardTitle>
        </CardHeader>
        <CardContent>
          <form onSubmit={createNewNote} className="space-y-4">
            <div>
              <Label htmlFor="title">Title</Label>
              <Input
                id="title"
                type="text"
                placeholder="Add title..."
                value={newNoteTitle}
                onChange={(ev) => setNewNoteTitle(ev.target.value)}
                required
              />
            </div>
            <div>
              <Label htmlFor="description">Description</Label>
              <Input
                id="description"
                type="text"
                placeholder="Add description..."
                value={newNoteDescription}
                onChange={(ev) => setNewNoteDescription(ev.target.value)}
                required
              />
            </div>
            <div>
              <Label htmlFor="body">Body</Label>
              <Input
                id="body"
                type="text"
                placeholder="Add body..."
                value={newNoteBody}
                onChange={(ev) => setNewNoteBody(ev.target.value)}
                required
              />
            </div>
            <div>
              <Label>Todo List</Label>
              {newTodoList.map((todo, index) => (
                <div key={index} className="flex items-center space-x-1 space-y-2">
                  <Input
                    type="text"
                    placeholder="Todo title..."
                    value={todo.title}
                    onChange={(ev) => handleTodoChange(index, "title", ev.target.value)}
                    required
                  />
                  <Input
                    type="checkbox"
                    checked={todo.isComplete}
                    onChange={(ev) => handleTodoChange(index, "isComplete", ev.target.checked)}
                  />
                  <Button
                    type="button"
                    onClick={() => removeTodo(index)}
                    className="bg-red-500 hover:bg-red-700 text-white"
                  >
                    Remove
                  </Button>
                </div>
              ))}
              <Button type="button" onClick={addTodo} className="mt-2">
                Add Todo
              </Button>
            </div>
            <Button type="submit" className="w-full" disabled={loading}>
              {loading ? (
               <div className="loader"></div>
              ) : (
                "Add Note"
              )}
            </Button>
          </form>
          <Toaster/>
        </CardContent>
        <CardFooter className="flex justify-center">
          <Button onClick={goBack} className="bg-gray-500 hover:bg-gray-700 text-white w-full ">
            Back
          </Button>
        </CardFooter>
      </Card>
